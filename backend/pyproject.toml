[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wbjj-backend"
version = "1.0.0"
description = "Backend API para sistema de gestÃ£o de academias de jiu-jitsu"
authors = [{name = "wBJJ Team", email = "dev@wbjj.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "Django>=4.2.0,<4.3.0",
    "djangorestframework>=3.14.0,<3.15.0",
    "drf-spectacular>=0.26.0,<0.27.0",
    "redis>=5.0.0,<6.0.0",
    "django-redis>=5.4.0,<6.0.0",
    "django-tenant-schemas>=1.11.0,<2.0.0",
    "djangorestframework-simplejwt>=5.3.0,<6.0.0",
    "django-cors-headers>=4.3.0,<5.0.0",
    "django-permissions-policy>=4.18.0,<5.0.0",
    "cryptography>=41.0.0,<42.0.0",
    "django-filter>=23.5,<24.0",
    "djangorestframework-camel-case>=1.4.0,<2.0.0",
    "django-extensions>=3.2.0,<4.0.0",
    "django-cachalot>=2.6.0,<3.0.0",
    "django-compression-middleware>=0.5.0,<1.0.0",
    "python-decouple>=3.8,<4.0",
    "Pillow>=10.1.0,<11.0.0",
    "celery>=5.3.0,<6.0.0",
    "django-structlog>=7.0.0,<8.0.0",
    "sentry-sdk[django]>=1.38.0,<2.0.0",
    "django-health-check>=3.17.0,<4.0.0",
    "dj-database-url>=3.0.1,<4.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-django>=4.7.0,<5.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "freezegun>=1.2.0,<2.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "ruff>=0.1.0,<0.2.0",
    "black>=23.0.0,<24.0.0",
    "pre-commit>=3.5.0,<4.0.0",
    "mypy>=1.7.0,<2.0.0",
    "django-stubs>=4.2.0,<5.0.0",
    "bandit>=1.7.5,<2.0.0",
    "django-debug-toolbar>=4.2.0,<5.0.0",
    "django-unfold>=0.60.0,<1.0.0",
    "django-browser-reload>=1.12.0,<2.0.0",
    "ipython>=8.16.0,<9.0.0",
    "rich>=13.0.0,<14.0.0",
]

prod = [
    "gunicorn>=21.2.0,<22.0.0",
    "whitenoise>=6.6.0,<7.0.0",
    "psutil>=5.9.0,<6.0.0",
]

[project.urls]
Homepage = "https://github.com/wbjj/backend"
Documentation = "https://api.wbjj.com/docs/"
Repository = "https://github.com/wbjj/backend"
Issues = "https://github.com/wbjj/backend/issues"

[tool.hatch.build.targets.wheel]
packages = ["apps", "config"]

[tool.hatch.build.targets.sdist]
include = [
    "apps/",
    "config/",
    "manage.py",
    "CONTEXT.md",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "N",
    "B",
    "C4",
    "DJ",
    "UP",
    "RUF"
]
ignore = [
    "E501",
    "N806",
    "DJ001"
]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["N806", "E501", "F401", "RUF012"]
"*/tests/*" = ["N806", "F401", "F811"]
"**/settings/*.py" = ["F401", "F403", "F405"]
"*/admin.py" = ["RUF012"]

[tool.ruff.lint.isort]
known-first-party = ["apps", "config"]
known-third-party = ["django"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations/
)/
'''

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "wbjj.settings.testing"
addopts = [
    "--cov=apps",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--strict-markers",
    "--strict-config",
    "-ra",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["apps"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
plugins = ["mypy_django_plugin.main"]
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradual typing
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.development"

[dependency-groups]
dev = [
    "django-debug-toolbar>=4.4.6",
    "django-unfold>=0.62.0",
]
