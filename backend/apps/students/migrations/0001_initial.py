# Generated by Django 4.2.23 on 2025-07-07 18:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('registration_number', models.CharField(help_text='Número de matrícula único', max_length=50, unique=True)),
                ('enrollment_date', models.DateField(help_text='Data de matrícula')),
                ('emergency_contact_name', models.CharField(max_length=255)),
                ('emergency_contact_phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_relationship', models.CharField(max_length=100)),
                ('medical_conditions', models.TextField(blank=True, help_text='Condições médicas relevantes')),
                ('medications', models.TextField(blank=True, help_text='Medicamentos em uso')),
                ('belt_color', models.CharField(choices=[('white', 'Branca'), ('blue', 'Azul'), ('purple', 'Roxa'), ('brown', 'Marrom'), ('black', 'Preta'), ('coral', 'Coral'), ('red', 'Vermelha')], default='white', max_length=10)),
                ('belt_stripes', models.PositiveSmallIntegerField(default=0)),
                ('last_graduation_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('suspended', 'Suspenso'), ('graduated', 'Formado')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Observações do instrutor')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'students',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Graduation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('from_belt', models.CharField(choices=[('white', 'Branca'), ('blue', 'Azul'), ('purple', 'Roxa'), ('brown', 'Marrom'), ('black', 'Preta'), ('coral', 'Coral'), ('red', 'Vermelha')], max_length=10)),
                ('to_belt', models.CharField(choices=[('white', 'Branca'), ('blue', 'Azul'), ('purple', 'Roxa'), ('brown', 'Marrom'), ('black', 'Preta'), ('coral', 'Coral'), ('red', 'Vermelha')], max_length=10)),
                ('graduation_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('instructor', models.ForeignKey(limit_choices_to={'role__in': ['instructor', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduations', to='students.student')),
            ],
            options={
                'db_table': 'graduations',
                'ordering': ['-graduation_date'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('class_date', models.DateField()),
                ('check_in_time', models.TimeField()),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('class_type', models.CharField(default='regular', help_text='Tipo de aula (gi, no-gi, competition, etc.)', max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('instructor', models.ForeignKey(limit_choices_to={'role__in': ['instructor', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='students.student')),
            ],
            options={
                'db_table': 'attendances',
                'ordering': ['-class_date', '-check_in_time'],
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['registration_number'], name='students_registr_f0f54d_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['belt_color'], name='students_belt_co_b58c72_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['status'], name='students_status_3ac771_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['enrollment_date'], name='students_enrollm_89e94c_idx'),
        ),
        migrations.AddIndex(
            model_name='graduation',
            index=models.Index(fields=['student', 'graduation_date'], name='graduations_student_31c288_idx'),
        ),
        migrations.AddIndex(
            model_name='graduation',
            index=models.Index(fields=['graduation_date'], name='graduations_graduat_b5da5d_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['student', 'class_date'], name='attendances_student_bde940_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['class_date'], name='attendances_class_d_77ff13_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'class_date', 'check_in_time')},
        ),
    ]
