# Generated by Django 4.2.23 on 2025-07-07 18:30

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(help_text='Data de vencimento')),
                ('reference_month', models.DateField(help_text='Mês de referência (YYYY-MM-01)')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('late_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('overdue', 'Vencido'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('description', models.TextField(default='Mensalidade', help_text='Descrição da fatura')),
                ('notes', models.TextField(blank=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='students.student')),
            ],
            options={
                'db_table': 'invoices',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Nome do método (ex: PIX, Cartão)', max_length=100)),
                ('code', models.CharField(help_text='Código único', max_length=20, unique=True)),
                ('is_online', models.BooleanField(default=False, help_text='É pagamento online?')),
                ('processing_fee', models.DecimalField(decimal_places=4, default=0, help_text='Taxa de processamento (ex: 0.0349 = 3.49%)', max_digits=5)),
            ],
            options={
                'db_table': 'payment_methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_date', models.DateTimeField(help_text='Data/hora do pagamento')),
                ('confirmed_date', models.DateTimeField(blank=True, help_text='Data/hora da confirmação', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('confirmed', 'Confirmado'), ('failed', 'Falhou'), ('refunded', 'Estornado')], default='pending', max_length=20)),
                ('external_id', models.CharField(blank=True, help_text='ID da transação no gateway de pagamento', max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.invoice')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.paymentmethod')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-payment_date'],
                'indexes': [models.Index(fields=['invoice', 'status'], name='payments_invoice_58a325_idx'), models.Index(fields=['payment_date'], name='payments_payment_aebcb7_idx'), models.Index(fields=['external_id'], name='payments_externa_f1691b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['student', 'status'], name='invoices_student_e04bd2_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date', 'status'], name='invoices_due_dat_4b5593_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['reference_month'], name='invoices_referen_7db208_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('student', 'reference_month')},
        ),
    ]
