# Generated by Django 4.2.23 on 2025-07-16 14:46

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subdomain",
                    models.CharField(
                        help_text="Subdomínio único (ex: gracie-barra para gracie-barra.wbjj.com)",
                        max_length=100,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-z0-9-]+$",
                                "Apenas letras minúsculas, números e hífens",
                            )
                        ],
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Nome da academia", max_length=255),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Slug único para subdomínio (ex: gracie-barra)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email principal da academia", max_length=254
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Telefone da academia",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator("^\\+?1?\\d{9,15}$")
                        ],
                    ),
                ),
                ("address", models.TextField(help_text="Endereço completo")),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=50)),
                ("zip_code", models.CharField(max_length=10)),
                ("country", models.CharField(default="Brasil", max_length=50)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="tenant_logos/"),
                ),
                (
                    "primary_color",
                    models.CharField(
                        default="#3B82F6",
                        help_text="Cor primária em hex (ex: #3B82F6)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator("^#[0-9A-Fa-f]{6}$")
                        ],
                    ),
                ),
                (
                    "secondary_color",
                    models.CharField(
                        default="#1E40AF",
                        help_text="Cor secundária em hex",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator("^#[0-9A-Fa-f]{6}$")
                        ],
                    ),
                ),
                (
                    "monthly_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=150.0,
                        help_text="Mensalidade padrão",
                        max_digits=10,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="America/Sao_Paulo",
                        help_text="Timezone da academia",
                        max_length=50,
                    ),
                ),
                ("founded_date", models.DateField(blank=True, null=True)),
                ("website", models.URLField(blank=True)),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Academia ativa"),
                ),
            ],
            options={
                "verbose_name": "Academia",
                "verbose_name_plural": "Academias",
                "ordering": ["name"],
            },
        ),
    ]
